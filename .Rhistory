}%>% as.data.frame
ggplot(rmse_cv1,aes(x=factor(km), y=rmse))+geom_boxplot()
#data2: AWG
rmse_cv2 =   foreach(K = 1:maxK, .combine='rbind') %dopar% {
foreach(i=1:10, .combine='rbind')%dopar% {
# 1. Split the data into training and testing
data2_split =  initial_split(data2, prop=0.8)
data2_train = training(data2_split)
data2_test  = testing(data2_split)
# 2. Knn regress price on mileage with k=1-20(maxK)
knn2 = knnreg(price ~ mileage, data=data1_train, k=K)
# 3. Calculate rmse
c(km=K,rmse=modelr::rmse(knn2,data=data2_test))
}
}%>% as.data.frame
ggplot(rmse_cv2,aes(x=factor(km), y=rmse))+geom_boxplot()
data <- rmse_cv1 %>% group_by(km)%>% mutate(c350=mean(rmse))
data <- rmse_cv2 %>% group_by(km)%>% mutate(cawg=mean(rmse))
data1 <- cbind(k = 1:nrow(data), data)
ggplot(data , aes(k))+geom_line(aes(y=c350), color = "tomato")+geom_line(aes(y=camg), color = "steelblue")
data <- rmse_cv1 %>% group_by(km)%>% mutate(c350=mean(rmse))
data <- rmse_cv2 %>% group_by(km)%>% mutate(cawg=mean(rmse))
data1 <- cbind(k = 1:nrow(data), data)
data <- rmse_cv1 %>% group_by(km)%>% mutate(c350=mean(rmse))
data <- rmse_cv2 %>% group_by(km)%>% mutate(cawg=mean(rmse))
data <- cbind(k = 1:nrow(data), data)
ggplot(data , aes(k))+geom_line(aes(y=c350), color = "tomato")+geom_line(aes(y=camg), color = "steelblue")
View(data)
data <- c(rmse_cv1 %>% group_by(km)%>% mutate(c350=mean(rmse)),rmse_cv2 %>% group_by(km)%>% mutate(cawg=mean(rmse)))
View(data)
datat1 <- rmse_cv1 %>% group_by(km)%>% mutate(c350=mean(rmse))
datat2 <- rmse_cv2 %>% group_by(km)%>% mutate(cawg=mean(rmse))
View(datat1)
datat1 <- rmse_cv1 %>%  mutate(c350=mean(rmse))
View(datat1)
datat1 <- rmse_cv1 %>% group_by(km)%>% mutate(c350=mean(rmse))
datat2 <- rmse_cv2 %>% group_by(km)%>% mutate(cawg=mean(rmse))
data <- c(rmse_cv1 %>% group_by(km)%>%c350, rmse_cv2 %>% group_by(km)%>%cawg)
data <- c(datat1 %>% group_by(km)%>%c350, datat2 %>% group_by(km)%>%cawg)
datat1 <- rmse_cv1 %>% group_by(km)%>% mutate(c350=mean(rmse))
datat2 <- rmse_cv2 %>% group_by(km)%>% mutate(cawg=mean(rmse))
data <- c(datat1 %>% group_by(km)%>%c350, datat2 %>% group_by(km)%>%cawg)
data <- rmse_cv1 %>% group_by(km)%>% mutate(c350=mean(rmse))
data <- rmse_cv2 %>% group_by(km)%>% mutate(cawg=mean(rmse))
View(data)
data <- c(datat1%>% group_by(km), datat2 %>% group_by(km))
View(data)
data <- c(datat1%>% group_by(km)%>%c350, datat2 %>% group_by(km))
data <- c(rmse_cv1 %>% group_by(km)%>% summarize(c350=mean(rmse)), rmse_cv2 %>% group_by(km)%>% summarize(cawg=mean(rmse)))
View(data)
data <- full_join(rmse_cv1 %>% group_by(km)%>% summarize(c350=mean(rmse)), rmse_cv2 %>% group_by(km)%>% summarize(cawg=mean(rmse)), by=km)
data <- full_join(rmse_cv1, rmse_cv, by=km)
data <- full_join(rmse_cv1, rmse_cv, by="km")
datat1 <- rmse_cv1 %>% group_by(km)%>% summarize(c350=mean(rmse))
datat2 <- rmse_cv2 %>% group_by(km)%>% summarize(cawg=mean(rmse))
data <- full_join(rmse_cv1, rmse_cv, by="km")
data <- full_join(datat1, datat2, by="km")
View(data)
ggplot(data , aes(km))+geom_line(aes(y=c350), color = "tomato")+geom_line(aes(y=camg), color = "steelblue")
View(data)
ggplot(data , aes(km))+geom_line(aes(y=c350), color = "tomato")+geom_line(aes(y=cawg), color = "steelblue")
ggplot(data , aes(km))+geom_line(aes(y=c350), color = "tomato")
ggplot(data , aes(km))+geom_line(aes(y=cawg), color = "steelblue")
ggplot(data , aes(km))+geom_line(aes(y=c350), color = "tomato")
#data1: 350
rmse_cv1 =   foreach(K = 1:maxK, .combine='rbind') %dopar% {
foreach(i=1:10, .combine='rbind')%dopar% {
# 1. Split the data into training and testing
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# 2. Knn regress price on mileage with k=1-20(maxK)
knn1 = knnreg(price ~ mileage, data=data1_train, k=K)
# 3. Calculate rmse
c(km=K,rmse=modelr::rmse(knn1,data=data1_test),predict=predict(knn1, data1_train))
}
}%>% as.data.frame
rmse_cv2 =   foreach(K = 1:maxK, .combine='rbind') %dopar% {
foreach(i=1:10, .combine='rbind')%dopar% {
# 1. Split the data into training and testing
data2_split =  initial_split(data2, prop=0.8)
data2_train = training(data2_split)
data2_test  = testing(data2_split)
# 2. Knn regress price on mileage with k=1-20(maxK)
knn2 = knnreg(price ~ mileage, data=data1_train, k=K)
# 3. Calculate rmse
c(km=K,rmse=modelr::rmse(knn2,data=data2_test),predict=predict(knn2, data2_train))
}
}%>% as.data.frame
rmse_cv1 =   foreach(K = 1:maxK, .combine='rbind') %dopar% {
foreach(i=1:10, .combine='rbind')%dopar% {
# 1. Split the data into training and testing
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# 2. Knn regress price on mileage with k=1-20(maxK)
knn1 = knnreg(price ~ mileage, data=data1_train, k=K)
# 3. Calculate rmse
c(km=K,rmse=modelr::rmse(knn1,data=data1_test),predict=predict(knn1, data1_train))
}
}%>% as.data.frame
#data2: AWG
rmse_cv2 =   foreach(K = 1:maxK, .combine='rbind') %dopar% {
foreach(i=1:10, .combine='rbind')%dopar% {
# 1. Split the data into training and testing
data2_split =  initial_split(data2, prop=0.8)
data2_train = training(data2_split)
data2_test  = testing(data2_split)
# 2. Knn regress price on mileage with k=1-20(maxK)
knn2 = knnreg(price ~ mileage, data=data2_train, k=K)
# 3. Calculate rmse
c(km=K,rmse=modelr::rmse(knn2,data=data2_test),predict=predict(knn2, data2_train))
}
}%>% as.data.frame
data1 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data2 <- sclass %>% group_by(trim) %>% filter(trim=="65 AMG")
rmse_cv1 =   foreach(K = 1:maxK, .combine='rbind') %dopar% {
foreach(i=1:10, .combine='rbind')%dopar% {
# 1. Split the data into training and testing
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# 2. Knn regress price on mileage with k=1-20(maxK)
knn1 = knnreg(price ~ mileage, data=data1_train, k=K)
# 3. Calculate rmse
c(km=K,rmse=modelr::rmse(knn1,data=data1_test),predict=predict(knn1, data1_train))
}
}%>% as.data.frame
ggplot(data , aes(km))+geom_line(aes(y=c350), color = "tomato")
ggplot(data , aes(km))+geom_line(aes(y=cawg), color = "steelblue")
ggplot(data , aes(km))+geom_line(aes(y=c350), color = "tomato")
pdata1 <- rmse_cv1 %>% group_by(km) %>% summarize(mp=mean(predict)) %>% filter(km="60")
pdata1 <- rmse_cv1 %>% group_by(km) %>% summarize(mp=mean(predict)) %>% filter(km=="60")
View(pdata1)
View(rmse_cv1)
View(rmse_cv1)
data1 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data2 <- sclass %>% group_by(trim) %>% filter(trim=="65 AMG")
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# KNN with K = 100
knn160 = knnreg(price ~ mileage, data=data1, k=60)
rmse(knn160, data1_test)
# attach the predictions to the test data frame
data1_test = data1_test %>%
mutate(price_pred = predict(knn160, data1_test))
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = price, y = mileage), alpha=0.2) +
ylim(7000, 20000)
p_test
# now add the predictions
p_test + geom_line(aes(x = price, y = mileage), color='red', size=1.5)
data1 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data2 <- sclass %>% group_by(trim) %>% filter(trim=="65 AMG")
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# KNN with K = 60
knn160 = knnreg(price ~ mileage, data=data1, k=60)
rmse(knn160, data1_test)
# attach the predictions to the test data frame
data1_test = data1_test %>%
mutate(price_pred = predict(knn160, data1_test))
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = price, y = mileage), alpha=0.2) +
ylim(7000, 20000)
p_test
# now add the predictions
p_test + geom_line(aes(x = price, y = mileage), color='red', size=1.5)
# KNN with K = 60
knn160 = knnreg(price ~ mileage, data=data1, k=60)
rmse(knn160, data1_test)
data1_test = data1_test %>%
mutate(price_pred = predict(knn160, data1_test))
# attach the predictions to the test data frame
data1_test = data1_test %>%
mutate(price_pred = predict(knn160, data1_test))
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) +
ylim(7000, 20000)
p_test
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred), color='red', size=1.5)
data1_test = data1_test %>%
mutate(price_pred = predict(knn160, data1_test))
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.1) +
ylim(7000, 20000)
p_test
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred), color='red', size=1.5)
ggplot(data , aes(km))+geom_line(aes(y=cawg), color = "steelblue")
data2 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data2_split =  initial_split(data2, prop=0.8)
data2_train = training(data1_split)
data2_test  = testing(data1_split)
# KNN with K = 18
knn18 = knnreg(price ~ mileage, data=data2, k=18)
rmse(knn18, data2_test)
# attach the predictions to the test data frame
data1_test = data2_test %>%
mutate(price_pred2 = predict(knn18, data2_test))
p_test = ggplot(data = data2_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) +
ylim(7000, 20000)
p_test
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred2), color='red', size=1.5)
```{r, echo=FALSE,fig.width =5, fig.height = 2,fig.align='center'}
data2 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data2_split =  initial_split(data2, prop=0.8)
data2_train = training(data1_split)
data2_test  = testing(data1_split)
# KNN with K = 18
knn18 = knnreg(price ~ mileage, data=data2, k=18)
rmse(knn18, data2_test)
# attach the predictions to the test data frame
data2_test = data2_test %>%
mutate(price_pred2 = predict(knn18, data2_test))
p_test = ggplot(data = data2_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) +
ylim(7000, 20000)
p_test
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred2), color='red', size=1.5)
data1 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# KNN with K = 60
knn60 = knnreg(price ~ mileage, data=data1, k=60)
rmse(knn60, data1_test)
# attach the predictions to the test data frame
data1_test = data1_test %>%
mutate(price_pred1 = predict(knn60, data1_test))
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) +
ylim(7000, 20000)
p_test
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred1), color='red', size=1.5)
data1 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# KNN with K = 60
knn60 = knnreg(price ~ mileage, data=data1, k=60)
rmse(knn60, data1_test)
# attach the predictions to the test data frame
data1_test = data1_test %>%
mutate(price_pred1 = predict(knn60, data1_test))
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) +
ylim(1000, 20000)
p_test
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred1), color='red', size=1.5)
data1 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# KNN with K = 60
knn60 = knnreg(price ~ mileage, data=data1, k=60)
rmse(knn60, data1_test)
# attach the predictions to the test data frame
data1_test = data1_test %>%
mutate(price_pred1 = predict(knn60, data1_test))
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) +
ylim(5000, 20000)
p_test
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred1), color='red', size=1.5)
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) +
ylim(5000, 20000) +
xlim(5000, 20000)
p_test
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred1), color='red', size=1.5)
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) +
ylim(5000, 20000)
p_test
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) +
ylim(5000, 20000)
p_test
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) +
ylim(5000, 20000)
p_test
data1 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# KNN with K = 60
knn60 = knnreg(price ~ mileage, data=data1, k=60)
rmse(knn60, data1_test)
# attach the predictions to the test data frame
data1_test = data1_test %>%
mutate(price_pred1 = predict(knn60, data1_test))
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) + ylim(5000, 20000)
p_test
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred1), color='red', size=1.5)
data1 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# KNN with K = 60
knn60 = knnreg(price ~ mileage, data=data1, k=60)
rmse(knn60, data1_test)
# attach the predictions to the test data frame
data1_test = data1_test %>%
mutate(price_pred1 = predict(knn60, data1_test))
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) + ylim(5000, 20000) + ylim(500000, 2000000)
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred1), color='red', size=1.5)
data1 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# KNN with K = 60
knn60 = knnreg(price ~ mileage, data=data1, k=60)
rmse(knn60, data1_test)
# attach the predictions to the test data frame
data1_test = data1_test %>%
mutate(price_pred1 = predict(knn60, data1_test))
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) + ylim(5000, 20000) + ylim(5000000, 20000000)
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred1), color='red', size=1.5)
data1 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# KNN with K = 60
knn60 = knnreg(price ~ mileage, data=data1, k=60)
rmse(knn60, data1_test)
# attach the predictions to the test data frame
data1_test = data1_test %>%
mutate(price_pred1 = predict(knn60, data1_test))
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) + ylim(5000, 20000) + xlim(5000000, 20000000)
data1 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# KNN with K = 60
knn60 = knnreg(price ~ mileage, data=data1, k=60)
rmse(knn60, data1_test)
# attach the predictions to the test data frame
data1_test = data1_test %>%
mutate(price_pred1 = predict(knn60, data1_test))
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) + ylim(5000, 20000) + xlim(5000000, 20000000)
data1 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# KNN with K = 60
knn60 = knnreg(price ~ mileage, data=data1, k=60)
rmse(knn60, data1_test)
# attach the predictions to the test data frame
data1_test = data1_test %>%
mutate(price_pred1 = predict(knn60, data1_test))
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) + ylim(5000, 20000)
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred1), color='red', size=1.5)
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) + ylim(5000, 20000)+xlim(30000,500000)
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) + ylim(5000, 20000)+xlim(30000,500000)
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) + ylim(5000, 20000)+xlim(30000,500000)
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) + ylim(5000, 20000)+xlim(30000,500000)
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) + ylim(50000, 200000)
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred1), color='red', size=1.5)
data1 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# KNN with K = 60
knn60 = knnreg(price ~ mileage, data=data1, k=60)
rmse(knn60, data1_test)
# attach the predictions to the test data frame
data1_test = data1_test %>%
mutate(price_pred1 = predict(knn60, data1_test))
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) + ylim(5000, 20000)
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred1), color='red', size=1.5)
data1 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# KNN with K = 60
knn60 = knnreg(price ~ mileage, data=data1, k=60)
rmse(knn60, data1_test)
# attach the predictions to the test data frame
data1_test = data1_test %>%
mutate(price_pred1 = predict(knn60, data1_test))
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2) + ylim(5000, 20000)
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred1), color='red', size=1.5)
p_test = ggplot(data = data2_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2)
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred2), color='red', size=1.5)
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2)
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred1), color='red', size=1.5)
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2)
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred1), color='red', size=1.5)
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2)
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred1), color='red', size=1.5)
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2)
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred1), color='red', size=1.5)
data1 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# KNN with K = 60
knn60 = knnreg(price ~ mileage, data=data1, k=60)
rmse(knn60, data1_test)
# attach the predictions to the test data frame
data1_test = data1_test %>%
mutate(price_pred1 = predict(knn60, data1_test))
data1 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# KNN with K = 60
knn60 = knnreg(price ~ mileage, data=data1, k=60)
rmse(knn60, data1_test)
# attach the predictions to the test data frame
data1_test = data1_test %>%
mutate(price_pred1 = predict(knn60, data1_test))
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2)
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred1), color='red', size=1.5)
data1 <- sclass %>% group_by(trim) %>% filter(trim=="350")
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# KNN with K = 60
knn60 = knnreg(price ~ mileage, data=data1, k=60)
rmse(knn60, data1_test)
# attach the predictions to the test data frame
data1_test = data1_test %>%
mutate(price_pred1 = predict(knn60, data1_test))
p_test = ggplot(data = data1_test) +
geom_point(mapping = aes(x = mileage, y = price), alpha=0.2)
# now add the predictions
p_test + geom_line(aes(x = mileage, y = price_pred1), color='red', size=1.5)
rmse_cv1 =   foreach(K = 1:maxK, .combine='rbind') %do% {
foreach(i=1:10, .combine='rbind')%do% {
# 1. Split the data into training and testing
data1_split =  initial_split(data1, prop=0.8)
data1_train = training(data1_split)
data1_test  = testing(data1_split)
# 2. Knn regress price on mileage with k=1-20(maxK)
knn1 = knnreg(price ~ mileage, data=data1_train, k=K)
# 3. Calculate rmse
c(km=K,rmse=modelr::rmse(knn1,data=data1_test),predict=modelr::predict(knn1, data1_test))
}
}%>% as.data.frame
data = olympics_top20 %>% group_by(sport,sex) %>% filter(sex=="F")
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
library(knitr)
library(tidyverse)
library(ggplot2)
library(reshape2)
library(gapminder)
library(mosaic)
library(extraDistr)
library(caret)
library(modelr)
library(parallel)
library(foreach)
library(rsample)  # for creating train/test splits
load(file = "data.RData")
data = olympics_top20 %>% group_by(sport,sex) %>% filter(sex=="F")
quantile(data$height, 0.95)
library(magrittr) # needs to be run every time you start R and want to use %>%
library(dplyr)    # alternatively, this also loads %>%
library(knitr)
library(tidyverse)
library(ggplot2)
library(reshape2)
library(gapminder)
library(mosaic)
library(extraDistr)
library(caret)
